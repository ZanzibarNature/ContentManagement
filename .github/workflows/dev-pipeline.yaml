name: cm-dev-pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./ContentManagement

      - name: Build
        run: dotnet build --no-restore
        working-directory: ./ContentManagement

      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./ContentManagement

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          buildkit: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zanzibarinh/contentmanagement:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: kawa-foundation-app-dev

      - name: Get OpenShift token
        run: |
          token=$(oc whoami --show-token)
          echo "::set-env name=NEW_TOKEN::$token"
      
      - name: Get public key from GitHub secrets
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/ZanzibarNature/actions/secrets/public-key)
          key_id=$(echo "$response" | jq -r '.key_id')
          echo "::set-env name=SECRET_KEY_ID::$key_id"

      - name: Update GitHub secret with new OPENSHIFT_TOKEN
        run: |
          echo "Updating OPENSHIFT_TOKEN secret"
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/ZanzibarNature/actions/secrets/OPENSHIFT_TOKEN \
            -d '{"encrypted_value":"'"$(echo -n "${{ env.NEW_TOKEN }}" | base64)"'", "key_id":"'"${{ env.SECRET_KEY_ID }}"'", "visibility":"all"'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Deploy with Helm
        run: helm upgrade --install content-management docker-compose/