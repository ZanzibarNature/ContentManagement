name: cm-dev-pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./ContentManagement

      - name: Build
        run: dotnet build --no-restore
        working-directory: ./ContentManagement

      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./ContentManagement

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          buildkit: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zanzibarinh/contentmanagement:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: kawa-foundation-app-dev
      
      - name: Get login token from OpenShift
        id: get_token
        run: |
          NEW_TOKEN=$(oc whoami --show-token)
          echo "::set-output name=new_token::$NEW_TOKEN"

      - name: Refresh OPENSHIFT_TOKEN secret
        run: |
          echo "Removing existing OPENSHIFT_TOKEN secret"
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/secrets/OPENSHIFT_TOKEN"

          echo "Creating new OPENSHIFT_TOKEN secret"
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"encrypted_value": "'"$(echo -n "${{ steps.get_token.outputs.new_token }}" | base64)"'", "key_id": "'"$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/secrets/public-key" | jq -r .key_id)"'"}' \
            "https://api.github.com/repos/${{ github.repository }}/actions/secrets/OPENSHIFT_TOKEN"
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Deploy with Helm
        run: helm upgrade --install content-management docker-compose/