name: cm-dev-pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./ContentManagement

      - name: Build
        run: dotnet build --no-restore
        working-directory: ./ContentManagement

      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./ContentManagement

  docker:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      version: ${{ steps.increment-patch-version.outputs.version }}
    steps:
      - 
        name: Check out code
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Read current version
        id: read-version
        run: echo "::set-output name=version::$(cat version.txt)"
      - 
        name: Increment patch version
        id: increment-patch-version
        run: echo "::set-output name=version::$(echo ${{ steps.read-version.outputs.version }} | awk -F. '{$3=$3+1; print $0}' OFS=.)"
      - 
        name: Write new version
        run: echo "${{ steps.increment-patch-version.outputs.version }}" > version.txt
      - 
        name: Set variable
        id: set_var
        run: echo "version=${{ steps.increment-patch-version.outputs.version }}" >> $GITHUB_ENV
      - 
        name: Commit and push new version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.txt
          git commit -m "Increment patch version to ${{ steps.increment-patch-version.outputs.version }} [skip ci]"
          git push
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          buildkit: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            zanzibarinh/contentmanagement:latest
            zanzibarinh/contentmanagement:${{ steps.increment-patch-version.outputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: kawa-foundation-app-dev

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Deploy with Helm
        run: helm upgrade --install content-management --set version=${{needs.docker.outputs.version}} docker-compose/